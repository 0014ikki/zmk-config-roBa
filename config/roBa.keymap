#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp SEMI>;
            key-positions = <20 21>;
        };

        LANG_1 {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <12 13>;
        };

        LANG_2 {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R     &kp T                                                      &kp Y        &kp U    &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &lt 2 F   &kp G          &kp LS(LG(S))        &kp MINUS              &kp H        &lt 2 J  &kp K      &kp L    &kp SQT
&kp Z             &kp X         &kp C         &kp V     &kp B          &gresc               &kp SEMICOLON          &kp N        &kp M    &kp COMMA  &kp DOT  &kp SLASH
&kp LEFT_CONTROL  &kp LEFT_WIN  &kp LEFT_ALT  &kp LCMD  &kp BACKSPACE  &kp RIGHT_SHIFT      &mt RIGHT_SHIFT SPACE  &lt 1 ENTER                               &lt 4 ESC
            >;
        };

        NUM {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PLUS                                               &kp CARET         &kp AMPERSAND      &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp NUMBER_6      &kp N7             &kp N8          &kp N9                &kp N0
&kp F1           &kp F2        &kp F3        &kp F4        &kp F5    &kp EQUAL                    &kp TILDE       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&trans           &trans        &trans        &trans        &trans    &trans                       &trans          &trans                                                                     &kp PIPE
            >;
        };

        FUNCTION {
            bindings = <
&kp ESC      &kp LG(LEFT)          &kp LG(UP)            &kp LG(RIGHT)          &trans                      &trans  &kp LG(LBKT)  &kp LC(UP)  &kp LG(RBKT)  &kp LG(LS(LC(NUMBER_4)))
&mo 3        &kp LG(N1)            &kp LG(N2)            &kp LG(N3)             &trans  &trans      &trans  &trans  &mkp MB1      &mo 5       &mkp MB2      &trans
&trans       &kp LS(LA(LC(LEFT)))  &kp LS(LA(LC(DOWN)))  &kp LS(LA(LC(RIGHT)))  &trans  &trans      &trans  &trans  &trans        &trans      &trans        &trans
&bootloader  &trans                &trans                &trans                 &trans  &trans      &trans  &trans                                          &bootloader
            >;
        };

        ARROW {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans    &trans    &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans    &trans    &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                 &trans
            >;
        };

        Bluetooth {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans          &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &bt BT_CLR_ALL  &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                    &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
